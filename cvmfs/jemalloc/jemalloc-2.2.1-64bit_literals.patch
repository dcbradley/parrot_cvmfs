--- src/src/ckh.c.vanilla	2011-05-20 13:33:10.000000000 +0400
+++ src/src/ckh.c	2011-05-20 13:33:27.000000000 +0400
@@ -556,7 +556,7 @@
 	} else {
 		ret1 = h;
 		ret2 = hash(key, strlen((const char *)key),
-		    0x8432a476666bbc13U);
+		    0x8432a476666bbc13LLU);
 	}
 
 	*hash1 = ret1;
--- src/include/jemalloc/internal/hash.h.vanilla	2011-05-20 13:38:27.000000000 +0400
+++ src/include/jemalloc/internal/hash.h	2011-05-20 13:38:54.000000000 +0400
@@ -26,7 +26,7 @@
 JEMALLOC_INLINE uint64_t
 hash(const void *key, size_t len, uint64_t seed)
 {
-	const uint64_t m = 0xc6a4a7935bd1e995;
+	const uint64_t m = 0xc6a4a7935bd1e995LLU;
 	const int r = 47;
 	uint64_t h = seed ^ (len * m);
 	const uint64_t *data = (const uint64_t *)key;
--- src/src/prof.c.vanilla	2011-06-02 09:09:38.000000000 +0400
+++ src/src/prof.c	2011-06-02 09:12:03.000000000 +0400
@@ -1072,7 +1072,7 @@
 	} else {
 		ret1 = h;
 		ret2 = hash(bt->vec, bt->len * sizeof(void *),
-		    0x8432a476666bbc13U);
+		    0x8432a476666bbc13LLU);
 	}
 
 	*hash1 = ret1;
